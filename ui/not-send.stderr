error[E0277]: `*const ()` cannot be sent between threads safely
  --> $DIR/not-send.rs:19:5
   |
12 | fn is_send<T>()
   |    -------
13 | where
14 |     T: Send,
   |        ---- required by this bound in `is_send`
...
19 |     is_send::<Consumer<NotSend, consts::U4>>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `*const ()` cannot be sent between threads safely
   |
   = help: within `std::marker::PhantomData<*const ()>`, the trait `std::marker::Send` is not implemented for `*const ()`
   = note: required because it appears within the type `std::marker::PhantomData<*const ()>`
   = note: required because of the requirements on the impl of `std::marker::Send` for `heapless::spsc::split::Consumer<'_, std::marker::PhantomData<*const ()>, typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>`

error[E0277]: `*const ()` cannot be sent between threads safely
  --> $DIR/not-send.rs:20:5
   |
12 | fn is_send<T>()
   |    -------
13 | where
14 |     T: Send,
   |        ---- required by this bound in `is_send`
...
20 |     is_send::<Producer<NotSend, consts::U4>>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `*const ()` cannot be sent between threads safely
   |
   = help: within `std::marker::PhantomData<*const ()>`, the trait `std::marker::Send` is not implemented for `*const ()`
   = note: required because it appears within the type `std::marker::PhantomData<*const ()>`
   = note: required because of the requirements on the impl of `std::marker::Send` for `heapless::spsc::split::Producer<'_, std::marker::PhantomData<*const ()>, typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>`

error[E0277]: `*const ()` cannot be sent between threads safely
  --> $DIR/not-send.rs:21:5
   |
12 | fn is_send<T>()
   |    -------
13 | where
14 |     T: Send,
   |        ---- required by this bound in `is_send`
...
21 |     is_send::<Queue<NotSend, consts::U4>>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `*const ()` cannot be sent between threads safely
   |
   = help: within `std::marker::PhantomData<*const ()>`, the trait `std::marker::Send` is not implemented for `*const ()`
   = note: required because it appears within the type `std::marker::PhantomData<*const ()>`
   = note: required because of the requirements on the impl of `std::marker::Send` for `generic_array::GenericArray<std::marker::PhantomData<*const ()>, typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>`
   = note: required because it appears within the type `std::mem::ManuallyDrop<generic_array::GenericArray<std::marker::PhantomData<*const ()>, typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>`
   = note: required because it appears within the type `std::mem::MaybeUninit<generic_array::GenericArray<std::marker::PhantomData<*const ()>, typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>`
   = note: required because it appears within the type `heapless::i::Queue<generic_array::GenericArray<std::marker::PhantomData<*const ()>, typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>`
   = note: required because it appears within the type `heapless::spsc::Queue<std::marker::PhantomData<*const ()>, typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>`

error[E0107]: wrong number of type arguments: expected 1, found 2
  --> $DIR/not-send.rs:22:28
   |
22 |     is_send::<Vec<NotSend, consts::U4>>();
   |                            ^^^^^^^^^^ unexpected type argument

error[E0277]: `*const ()` cannot be sent between threads safely
  --> $DIR/not-send.rs:22:5
   |
12 | fn is_send<T>()
   |    -------
13 | where
14 |     T: Send,
   |        ---- required by this bound in `is_send`
...
22 |     is_send::<Vec<NotSend, consts::U4>>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `*const ()` cannot be sent between threads safely
   |
   = help: within `std::marker::PhantomData<*const ()>`, the trait `std::marker::Send` is not implemented for `*const ()`
   = note: required because it appears within the type `std::marker::PhantomData<*const ()>`
   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique<std::marker::PhantomData<*const ()>>`
   = note: required because it appears within the type `alloc::raw_vec::RawVec<std::marker::PhantomData<*const ()>>`
   = note: required because it appears within the type `std::vec::Vec<std::marker::PhantomData<*const ()>>`
